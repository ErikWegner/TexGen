<?php

/**
 * Implements hook_theme().
 */
function texgen_theme() {
  $items = array(
    'texgen_page' => array(
      'variables' => array(),
    ),
    'texgen_document' => array(
      'render element' => 'element',
    ),
  );
  return $items;
}


function texgen_menu() {
    $item = array();

    $items['texgen/letter'] = array(
        'title' => t('Letter generator'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('texgen_lettergenform'),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function texgen_lettergenform($formstate) {
    $form['sender'] = array(
        '#type' => 'fieldset',
        '#title' => t('Sender'),
    );

    $form['sender']['fromname'] = array(
        '#type' => 'textfield',
        '#title' => t('Name'),
    );

    $form['sender']['fromaddress'] = array(
        '#type' => 'textarea',
        '#title' => t('Address'),
        '#default_value' => "Straße~Hausnummer\nPLZ~Ort",
    );

    $form['sender']['fromemail'] = array(
        '#type' => 'textfield',
        '#title' => t('Email'),
    );
    $form['sender']['swfromemail'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show email address in letterhead'),
    );

    $form['sender']['fromurl'] = array(
        '#type' => 'textfield',
        '#title' => t('Homepage'),
    );
    $form['sender']['swfromurl'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show homepage in letterhead'),
    );

    $form['sender']['fromphone'] = array(
        '#type' => 'textfield',
        '#title' => t('Telephone'),
        '#description' => t('Group figures by using \, as delimiter')
    );
    $form['sender']['swfromphone'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show telephone number in letterhead'),
    );

    $form['sender']['fromfax'] = array(
        '#type' => 'textfield',
        '#title' => t('Fax'),
        '#description' => t('Group figures by using \, as delimiter')
    );
    $form['sender']['swfromfax'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show fax number in letterhead'),
    );

    $form['sender']['fromlogo'] = array(
        '#type' => 'textfield',
        '#title' => t('Logo'),
        '#description' => t('Command to display a logo')
    );

    $form['sender']['location'] = array(
        '#type' => 'textarea',
        '#title' => t('Additional information'),
        '#description' => t('E.g. additional business information')
    );

    $form['sender']['swfromrule'] = array(
        '#type' => 'select',
        '#title' => t('Rule'),
        '#options' => array(
            'afteraddress' => t('Underneath sender information block'),
            'aftername' => t('Right after sender name'),
            'swfromruleoff' => t('No rule'),
        ),
        '#default_value' => 'swfromruleoff'
    );



    $form['letter'] = array(
        '#type' => 'fieldset',
        '#title' => t('Subject, title, recipient'),
    );

    $form['letter']['subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
    );

    $form['letter']['title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#description' => t('E.g. Reminder, the text is put underneath the business line')
    );

    $form['letter']['empf'] = array(
        '#type' => 'textarea',
        '#title' => t('Recipient'),
        '#default_value' => "Vorname~Nachname\nStraße~Hausnummer\nPLZ~Ort",
    );

    $form['letter']['opening'] = array(
        '#type' => 'textfield',
        '#title' => t('Opening'),
        '#default_value' => t('Dear Sir or Madame,')
    );




    $form['businessline'] = array(
        '#type' => 'fieldset',
        '#title' => t('Business line'),
    );
    $form['businessline']['place'] = array(
        '#type' => 'textfield',
        '#title' => t('Place'),
        '#description' => t('Place is put before the date')
    );
    $form['businessline']['date'] = array(
        '#type' => 'textfield',
        '#title' => t('Date'),
        '#description' => t('If empty, today will be used')
    );
    $form['businessline']['myref'] = array(
        '#type' => 'textfield',
        '#title' => t('My reference'),
    );
    $form['businessline']['yourref'] = array(
        '#type' => 'textfield',
        '#title' => t('Your reference'),
    );
    $form['businessline']['yourmail'] = array(
        '#type' => 'textfield',
        '#title' => t('Your mail'),
    );
    $form['businessline']['customer'] = array(
        '#type' => 'textfield',
        '#title' => t('Customer'),
    );
    $form['businessline']['invoice'] = array(
        '#type' => 'textfield',
        '#title' => t('Invoice'),
    );





    $form['additions'] = array(
        '#type' => 'fieldset',
        '#title' => t('Additional settings'),
    );
    $form['additions']['signature'] = array(
        '#type' => 'textfield',
        '#title' => t('Signature'),
        '#desciption' => t('If empty, sender name will be shown')
    );
    $form['additions']['ps'] = array(
        '#type' => 'textarea',
        '#title' => t('Post scriptum'),
    );
    $form['additions']['cc'] = array(
        '#type' => 'textarea',
        '#title' => t('Mailling list'),
        '#description' => t('Separate entries with double back slashes: \\\\')
    );
    $form['additions']['encl'] = array(
        '#type' => 'textarea',
        '#title' => t('Enclosures'),
        '#description' => t('Separate entries with double back slashes: \\\\')
    );
    $form['additions']['parskip'] = array(
        '#type' => 'select',
        '#title' => t('Paragraph skip'),
        '#options' => array(
            'off' => t('Indent, do not skip'),
            'full' => t('No indent, skip one line, at least 1em space on last paragraph line'),
            'full*' => t('No indent, skip one line, at least one quarter space on last paragraph line'),
            'full+' => t('No indent, skip one line, at least one third on last paragraph line'),
            'full-' => t('No indent, skip one line, last paragraph line can have any length'),
            'half' => t('No indent, skip half a line, at least 1em space on last paragraph line'),
            'half*' => t('No indent, skip half a line, at least one quarter space on last paragraph line'),
            'half+' => t('No indent, skip half a line, at least one third on last paragraph line'),
            'half-' => t('No indent, skip half a line, last paragraph line can have any length'),
        ),
        '#default_value' => 'full'
    );

    $form['additions']['schriftart'] = array(
        '#type' => 'select',
        '#title' => t('Font'),
        '#options' => array(
            'libertine' => 'Libertine',
            'palatino' => 'Palatino',
            'times' => 'Times',
            'chancery' => 'Zapf Chancery',
            'bookman' => 'Bookman',
            'newcent' => 'New Century Schoolbook',
            'charter' => 'Charter',
            'lmodern' => 'Latin Modern',
            'bera' => 'Bera',
        ),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );

    return $form;
}

function texgen_seps($text) {
    return "\n\n%% ==================================\n".
        "%% " . $text . "\n".
        "%% ==================================\n";
}

function texgen_sepsfont($text) {
    return "%\n%  -- $text --\n";
}

function texgen_fontselect($fontname) {
    $r = "";
    $r .= "%Auswahl der Schriftarten:\n";

    //Palatino
    $com = ($fontname == "palatino" ? "" : "%");
    $r .= texgen_sepsfont("Palatino") .
        "% Paket mathpazo akzeptiert diese Optionen:
% leer    lieber nicht benutzen
% [sc]    Palatino(pplx) mit echten Kapitälchen
% [osf]   Palatino(pplj) mit echten Kapitälchen und
%         Oldstyle-Zahlen im Text
$com\usepackage[sc]{mathpazo}
$com\linespread{1.04} % Zeilenabstand passend zur Schriftart erhöen
$com\usepackage[scaled=.95]{helvet}
$com\usepackage{courier}
";


    //Times
    $com = ($fontname == "times" ? "" : "%");
    $r .= texgen_sepsfont("Times") .
        "$com\usepackage{mathptmx} % Times
$com\usepackage[scaled=.90]{helvet}
$com\usepackage{courier}
";


    //Zapf Chancery
    $com = ($fontname == "chancery" ? "" : "%");
    $r .= texgen_sepsfont("Zapf Chancery") .
        "$com\usepackage{chancery}
$com\usepackage[scaled=.90]{helvet}
$com\usepackage{courier}
";


    //Bookman
    $com = ($fontname == "bookman" ? "" : "%");
    $r .= texgen_sepsfont("Bookman") .
        "$com\usepackage{bookman}
$com\usepackage[scaled=.90]{helvet}
$com\usepackage{courier}
";


    //New Century Schoolbook
    $com = ($fontname == "newcent" ? "" : "%");
    $r .= texgen_sepsfont("New Century Schoolbook") .
        "$com\usepackage{newcent}
$com\usepackage[scaled=.90]{helvet}
$com\usepackage{courier}
";


    //Charter
    $com = ($fontname == "charter" ? "" : "%");
    $r .= texgen_sepsfont("Charter") .
        "$com\usepackage{charter}
$com\usepackage[scaled=.90]{helvet}
$com\usepackage{courier}
";

    //Latin Modern
    $com = ($fontname == "lmodern" ? "" : "%");
    $r .= texgen_sepsfont("Latin Modern") .
        "$com\usepackage{lmodern}
";

    //Bera
    $com = ($fontname == "bera" ? "" : "%");
    $r .= texgen_sepsfont("Bera") .
        "$com\usepackage{bera}
";

    //Libertine
    $com = ($fontname == "libertine" ? "" : "%");
    $r .= texgen_sepsfont("Libertine") .
        "$com\usepackage{libertine}
";

    $r .= "\n\n\\typearea[current]{last}";
    return $r;
}

function texgen_xhtmlchars($text) {
	return str_replace("'", "&apos;", str_replace("\"", "&quot;", str_replace(">", "&gt;", str_replace("<", "&lt;", str_replace("&", "&amp;", $text)))));
}

function texgen_cmdKomavar($varname, $indent, $values) {
        return texgen_commandIfVar("setkomavar{{$varname}}", $varname, $indent, $values);
}

function texgen_commandIfVar($command, $postvar, $indent, $values) {
        return str_repeat(" ", $indent) . (strlen($values[$postvar]) == 0 ? '%' : '') . "\\$command{" . texgen_xhtmlchars($values[$postvar]) . "}\n";
}

function texgen_lettergenform_submit($form, &$form_state) {
	$seite = '\documentclass[
  footsepline,
  DIN,
  draft=false,
  paper=a4,
  fontsize=11pt,
  ';

	$seite .= 'parskip=' . (preg_match('/^(full)|(half)[\+\*\-]?$/', $form_state['values']['parskip']) ? $form_state['values']['parskip'] : 'off' ) . ', %Einzug (off) oder Abstand((full)|(half)[\+\*\-]?)
  ';

	$seite .= 'fromphone='  . ($form_state['values']['swfromphone'] == '1' ? 'on' : 'off') . ', %Telefonnummer des Absenders setzen (true/false)
  ';

	$seite .= 'fromfax=' . ($form_state['values']['swfromfax'] == '1' ? 'on' : 'off') . ', %Faxnummer des Absenders setzen (true/false)
  ';

	$seite .= 'fromemail=' . ($form_state['values']['swfromemail'] == '1' ? 'on' : 'off') . ', %E-Mailadresse des Absenders setzen (true/false)
  ';

	$seite .= 'fromurl=' . ($form_state['values']['swfromurl'] == '1' ? 'on' : 'off') . ', %Internetadresse des Absenders setzen (true/false)
  ';

	switch($form_state['values']['swfromrule']) {
		case 'aftername' : $swfromrule = "aftername"; break;
		case 'afteraddress' : $swfromrule = "afteraddress"; break;
		default : $swfromrule = "off";
	}
	$seite .= 'fromrule=' . $swfromrule . ', %Linie bei Absender setzen (off/aftername/afteraddress)
  ';

	$seite .= 'pdftex,
  pagenumber=false,
  footsepline=false]{scrlttr2}

%Zusätzliche Pakete
\usepackage[utf8]{inputenc} % Encoding der TeX-Dateien:
% latin1 = Windows,
% ansi = Linux alt,
% utf8 = Linux aktuell
\usepackage[T1]{fontenc} % Aktiviert EC-Schriftarten
\usepackage{ae} % Schöne Schriften für PDF-Dateien
\usepackage{textcomp} % Text-Companion-Symbols (z. B. \texteuro)
\usepackage{ngerman} % Deutsche Einstellungen
';

$seite .= texgen_fontselect($form_state['values']['schriftart']);

$seite .= '

\usepackage{marvosym} % Symbole und das Euro-Zeichen \EUR
\usepackage{eurosym} % Euro-Zeichen nach offz. Vorgaben, Geld durch \EUR{100,00}
\usepackage{microtype} % Mikrotypographische Anpassungen für pdflatex
\usepackage{fixltx2e} % korrigiert LaTeX-Fehler

%wenn gewünscht, kann Hyperref aktiviert werden:
%\usepackage[pdftex, a4paper, bookmarks=false, bookmarksopen=false, bookmarksnumbered=true, pdfauthor={Autor}, pdftitle={Titel}, colorlinks,linkcolor=black, urlcolor=blue,pdfstartview=FitH]{hyperref}

%eventuell mehr Platz auf dem Papier schaffen
%\areaset[0mm]{17cm}{27cm}
%oder so
%\enlargethispage{2\baselineskip}

\LoadLetterOption{DIN}

%%Dieses Kommando setzt um den übergebenen Parameter
%%deutsche doppelte Anführungszeichen
\newcommand{\gdq}[1]{\glqq{}#1\grqq{}}

\begin{document}
  \setkomavar*{enclseparator}{Anlagen}
  \setkomavar{fromname}{' . texgen_xhtmlchars($form_state['values']['fromname']) . '}
  \setkomavar{fromaddress}{' . texgen_xhtmlchars(str_replace("\n", "\\\\ %\n    ", str_replace("\r","", $form_state['values']['fromaddress']))) . "}\n" .
	texgen_cmdKomavar("fromemail", 2, $form_state['values']) .
	texgen_cmdKomavar("fromurl", 2, $form_state['values']) .
	texgen_cmdKomavar("fromphone", 2, $form_state['values']) .
	texgen_cmdKomavar("fromfax", 2, $form_state['values']) .
	texgen_cmdKomavar("subject", 2, $form_state['values']) .
	"\n% Geschäftszeile\n" .
	texgen_cmdKomavar("place", 2, $form_state['values']) .
	texgen_cmdKomavar("date", 2, $form_state['values']) .
	texgen_cmdKomavar("myref", 2, $form_state['values']) .
	texgen_cmdKomavar("yourref", 2, $form_state['values']) .
	texgen_cmdKomavar("yourmail", 2, $form_state['values']) .
	texgen_cmdKomavar("customer", 2, $form_state['values']) .
	texgen_cmdKomavar("invoice", 2, $form_state['values']) .
 "\n".
	texgen_cmdKomavar("title", 2, $form_state['values']) .
'  \renewcommand*{\raggedsignature}{} % Unterschrift wird nicht eingezogen

  \begin{letter}{'.str_replace("\r", "", str_replace("\n","\\\\ %\n    ", texgen_xhtmlchars($form_state['values']['empf']))).'}

    \opening{'.texgen_xhtmlchars($form_state['values']['opening']).'}
    Brieftext
    \closing{Mit freundlichen Grüßen}

    %eine Unterschrift als Grafikdatei
    %\makeatletter
    %\@setplength{sigbeforevskip}{0\baselineskip}
    %\makeatother
    %\vskip -2.3cm
    %\includegraphics{unterschrift.png}
    %\vskip 2ex

    %Nachsatz (PS)
    ' . (strlen($form_state['values']['ps']) == 0 ? '%' : '') . '\ps
' . (strlen($form_state['values']['ps']) == 0 ? '' : $form_state['values']['ps']) .
"    %Anlagen\n" .
texgen_commandIfVar("encl", "encl", 4, $form_state['values']) .
"    %Verteiler\n" .
texgen_commandIfVar("cc", "cc", 4, $form_state['values']) .
'  \end{letter}
\end{document}';
	 $seite .= '</pre>';
    global $_SESSION;
    $_SESSION['texgendata'] = $seite;

    $form_state['redirect'] = 'texgen';

    \Drupal::messenger()->addStatus(t('Your document has been created.'));
}
